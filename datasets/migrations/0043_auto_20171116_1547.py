# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2017-11-16 14:47
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    def transfer_annotations_and_votes(apps, schema_editor):
        Annotation = apps.get_model('datasets', 'Annotation')
        CandidateAnnotation = apps.get_model('datasets', 'CandidateAnnotation')
        GroundTruthAnnotation = apps.get_model('datasets', 'GroundTruthAnnotation')
        for annotation in Annotation.objects.all():
            candidate_annotation = CandidateAnnotation.objects.create(created_at=annotation.created_at,
                                                                      type=annotation.type,
                                                                      algorithm=annotation.algorithm,
                                                                      start_time=annotation.start_time,
                                                                      end_time=annotation.end_time,
                                                                      ground_truth=annotation.ground_truth,
                                                                      created_by=annotation.created_by,
                                                                      sound_dataset=annotation.sound_dataset,
                                                                      taxonomy_node=annotation.taxonomy_node)
            for vote in annotation.votes.all():
                vote.candidate_annotation = candidate_annotation
                vote.save()

            if annotation.ground_truth:
                if annotation.ground_truth > 0:
                    GroundTruthAnnotation.objects.create(created_at=annotation.created_at,
                                                         type=annotation.type,
                                                         algorithm=annotation.algorithm,
                                                         start_time=annotation.start_time,
                                                         end_time=annotation.end_time,
                                                         ground_truth=annotation.ground_truth,
                                                         created_by=annotation.created_by,
                                                         sound_dataset=annotation.sound_dataset,
                                                         taxonomy_node=annotation.taxonomy_node,
                                                         from_candidate_annotation=candidate_annotation)

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('datasets', '0042_taxonomynode_propagate_to_parents'),
    ]

    operations = [
        migrations.CreateModel(
            name='CandidateAnnotation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('type', models.CharField(choices=[('MA', 'Manual'), ('AU', 'Automatic'), ('UK', 'Unknown')], default='UK', max_length=2)),
                ('algorithm', models.CharField(blank=True, max_length=200, null=True)),
                ('start_time', models.DecimalField(blank=True, decimal_places=3, max_digits=6, null=True)),
                ('end_time', models.DecimalField(blank=True, decimal_places=3, max_digits=6, null=True)),
                ('ground_truth', models.FloatField(blank=True, default=None, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='candidate_annotations', to=settings.AUTH_USER_MODEL)),
                ('sound_dataset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='candidate_annotations', to='datasets.SoundDataset')),
                ('taxonomy_node', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='candidate_annotations', to='datasets.TaxonomyNode')),
            ],
        ),
        migrations.CreateModel(
            name='GroundTruthAnnotation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('type', models.CharField(choices=[('MA', 'Manual'), ('AU', 'Automatic'), ('UK', 'Unknown')], default='UK', max_length=2)),
                ('algorithm', models.CharField(blank=True, max_length=200, null=True)),
                ('start_time', models.DecimalField(blank=True, decimal_places=3, max_digits=6, null=True)),
                ('end_time', models.DecimalField(blank=True, decimal_places=3, max_digits=6, null=True)),
                ('ground_truth', models.FloatField(blank=True, default=None, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ground_truth_annotations', to=settings.AUTH_USER_MODEL)),
                ('from_candidate_annotation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='datasets.CandidateAnnotation')),
                ('sound_dataset', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ground_truth_annotations', to='datasets.SoundDataset')),
                ('taxonomy_node', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ground_truth_annotations', to='datasets.TaxonomyNode')),
            ],
        ),
        migrations.AddField(
            model_name='vote',
            name='candidate_annotation',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='votes_candidate', to='datasets.CandidateAnnotation'),
        ),
        migrations.RunPython(transfer_annotations_and_votes, migrations.RunPython.noop)
    ]
